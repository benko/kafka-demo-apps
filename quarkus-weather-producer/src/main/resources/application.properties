# global bootstrap server list (there can be one per-channel)
kafka.bootstrap.servers = localhost:9092,localhost:9192,localhost:9292

# SSL/PLAINTEXT connection
kafka.security.protocol = PLAINTEXT
# kafka.ssl.truststore.location = ABSOLUTE_PATH_TO_WORKSPACE_FOLDER/truststore.jks
# kafka.ssl.truststore.password = password

# Kafka connector + some low-level configuration
mp.messaging.outgoing.weather-forecast.connector = smallrye-kafka
mp.messaging.outgoing.weather-forecast.topic = weather-forecast
mp.messaging.outgoing.weather-forecast.acks = 1
mp.messaging.outgoing.weather-forecast.max-inflight-messages = 5

# arbitrary client config can be provided by this bean as defaults, but is overridden by any property here
# mp.messaging.outgoing.weather-forecast.kafka-configuration = bean-identifier-of-producer-class

# key and value serializers
mp.messaging.outgoing.weather-forecast.key.serializer = org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.weather-forecast.value.serializer = io.quarkus.kafka.client.serialization.ObjectMapperSerializer

# AVRO & schema registry
# mp.messaging.outgoing.weather-forecast.value.serializer = io.apicurio.registry.utils.serde.AvroKafkaSerializer
# mp.messaging.outgoing.weather-forecast.schema.registry.url = https://../

# disable Quarkus dev services
quarkus.kafka.devservices.enabled = false